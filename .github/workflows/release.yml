name: Manual Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release Type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      track:
        description: 'Google Play Track'
        required: true
        default: 'production'
        type: choice
        options:
          - internal
          - alpha
          - beta
          - production

jobs:
  manual-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.4'
          channel: 'stable'
          cache: true

      - name: Generate Version
        id: version
        run: |
          # Get the latest tag
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null || echo "0.0.0")
          
          # Extract version numbers
          MAJOR=$(echo $LATEST_TAG | cut -d. -f1)
          MINOR=$(echo $LATEST_TAG | cut -d. -f2)
          PATCH=$(echo $LATEST_TAG | cut -d. -f3)
          
          # Increment version based on input
          case "${{ github.event.inputs.release_type }}" in
            major)
              NEW_MAJOR=$((MAJOR + 1))
              NEW_MINOR=0
              NEW_PATCH=0
              ;;
            minor)
              NEW_MAJOR=$MAJOR
              NEW_MINOR=$((MINOR + 1))
              NEW_PATCH=0
              ;;
            patch)
              NEW_MAJOR=$MAJOR
              NEW_MINOR=$MINOR
              NEW_PATCH=$((PATCH + 1))
              ;;
          esac
          
          NEW_VERSION="$NEW_MAJOR.$NEW_MINOR.$NEW_PATCH"
          BUILD_NUMBER=$(date +"%Y%m%d%H%M")
          
          # Set outputs
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "new_build_number=$BUILD_NUMBER" >> $GITHUB_OUTPUT

      - name: Get dependencies
        run: flutter pub get

      # Decode Keystore from GitHub Secrets
      - name: Decode Keystore
        env:
          ENCODED_KEYSTORE: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          echo "$ENCODED_KEYSTORE" | base64 --decode > android/app/upload-keystore.jks

      # Create key.properties file
      - name: Create key.properties
        env:
          KEYSTORE_PROPERTIES: ${{ secrets.KEYSTORE_PROPERTIES }}
        run: |
          echo "$KEYSTORE_PROPERTIES" > android/key.properties

      # Update version in pubspec.yaml
      - name: Update Version in pubspec.yaml
        run: |
          sed -i 's/version: .*/version: ${{ steps.version.outputs.new_version }}+${{ steps.version.outputs.new_build_number }}/g' pubspec.yaml

      # Build and sign Android App Bundle
      - name: Build App Bundle
        run: flutter build appbundle --target-platform android-arm,android-arm64,android-x64

      # Publish to Google Play
      - name: Publish to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_SERVICE_ACCOUNT }}
          packageName: com.monlam.gompa_tour
          releaseFiles: build/app/outputs/bundle/release/app-release.aab
          track: ${{ github.event.inputs.track }}

      # Create GitHub Release
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.new_version }}
          release_name: Release v${{ steps.version.outputs.new_version }}
          body: Manual release ${{ github.event.inputs.release_type }} version
          draft: false
          prerelease: false
